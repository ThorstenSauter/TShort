name: Terraform validate and plan

on:
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    name: Validate Terraform configuration
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Validate Terraform configuration
        uses: ThorstenSauter/terraform-actions/validate@v1
        with:
          terraform-version: ${{ vars.TERRAFORM_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          infra-directory: ${{ vars.INFRA_DIRECTORY }}

  plan-shared:
    name: Plan shared environment
    runs-on: ubuntu-24.04-arm
    environment: shared
    outputs:
        registry-name: ${{ steps.terraform-outputs.outputs.registry-name }}
        resource-group-name: ${{ steps.terraform-outputs.outputs.resource-group-name }}
    env:
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true
      ENVIRONMENT_NAME: Shared
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform plan
        uses: ThorstenSauter/terraform-actions/plan@v1
        with:
          environment-name: ${{ env.ENVIRONMENT_NAME }}
          terraform-version: ${{ vars.TERRAFORM_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          infra-directory: ${{ vars.TF_WORKING_DIRECTORY }}
          resource-group: ${{ vars.TF_BACKEND_RESOURCE_GROUP_NAME }}
          storage-account: ${{ vars.TF_BACKEND_STORAGE_ACCOUNT_NAME }}
          container: ${{ vars.TF_BACKEND_STATE_CONTAINER_NAME }}
          state-file: ${{ vars.TF_BACKEND_STATE_FILE_NAME }}
      - name: Retrieve Terraform outputs
        id: terraform-outputs
        working-directory: ${{ vars.TF_WORKING_DIRECTORY }}
        run: |
          echo "registry-name=$(terraform output -raw registry_name)" >> "$GITHUB_OUTPUT"
          echo "resource-group-name=$(terraform output -raw resource_group_name)" >> "$GITHUB_OUTPUT"

  plan-staging:
    name: Plan staging environment
    runs-on: ubuntu-24.04-arm
    environment: staging
    needs:
      - plan-shared
    env:
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      ENVIRONMENT_NAME: Staging
      TF_VAR_api_container_image_name: "${{ needs.plan-shared.outputs.registry-name }}.azurecr.io/placeholder"
      TF_VAR_container_registry_resource_group: ${{ needs.plan-shared.outputs.resource-group-name }}
      TF_VAR_entra_id_client_secret: ${{ secrets.ENTRA_ID_CLIENT_SECRET }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform plan
        uses: ThorstenSauter/terraform-actions/plan@v1
        with:
          environment-name: ${{ env.ENVIRONMENT_NAME }}
          terraform-version: ${{ vars.TERRAFORM_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          infra-directory: ${{ vars.TF_WORKING_DIRECTORY }}
          resource-group: ${{ vars.TF_BACKEND_RESOURCE_GROUP_NAME }}
          storage-account: ${{ vars.TF_BACKEND_STORAGE_ACCOUNT_NAME }}
          container: ${{ vars.TF_BACKEND_STATE_CONTAINER_NAME }}
          state-file: ${{ vars.TF_BACKEND_STATE_FILE_NAME }}

  plan-production:
    name: Plan production environment
    runs-on: ubuntu-24.04-arm
    environment: production
    needs:
      - plan-shared
    env:
      ARM_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      ARM_USE_AZUREAD: true
      ARM_USE_OIDC: true
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      ENVIRONMENT_NAME: Production
      TF_VAR_api_container_image_name: "${{ needs.plan-shared.outputs.registry-name }}.azurecr.io/placeholder"
      TF_VAR_container_registry_resource_group: ${{ needs.plan-shared.outputs.resource-group-name }}
      TF_VAR_entra_id_client_secret: ${{ secrets.ENTRA_ID_CLIENT_SECRET }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Terraform plan
        uses: ThorstenSauter/terraform-actions/plan@v1
        with:
          environment-name: ${{ env.ENVIRONMENT_NAME }}
          terraform-version: ${{ vars.TERRAFORM_VERSION }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          infra-directory: ${{ vars.TF_WORKING_DIRECTORY }}
          resource-group: ${{ vars.TF_BACKEND_RESOURCE_GROUP_NAME }}
          storage-account: ${{ vars.TF_BACKEND_STORAGE_ACCOUNT_NAME }}
          container: ${{ vars.TF_BACKEND_STATE_CONTAINER_NAME }}
          state-file: ${{ vars.TF_BACKEND_STATE_FILE_NAME }}
